{
  "hash": "a2976d2489ba3449d654357aeb30961e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Japan population male female ratio by age and by prefecture\nauthor: Mitsuo Shiota\ndate: '2025-03-26'\ncategories:\n  - economics\n  - R\nknitr: \n  opts_chunk: \n    out.width: '70%'\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggrepel)\nlibrary(sf)\n\ntheme_set(theme_light())\n```\n:::\n\n\n\n## Get data from e-stat\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nestat_api_key <- Sys.getenv(\"ESTAT_API_KEY\")\n\nmeta_info <- estatapi::estat_getMetaInfo(appId = estat_api_key,\n                               lang = \"J\",\n                               statsDataId = \"0003448237\")\n\ndat_2023 <- estatapi::estat_getStatsData(appId = estat_api_key,\n                          lang = \"J\",\n                          statsDataId = \"0003448237\",\n                          cdCat01 = c(\"001\", \"002\"), # 男、女\n                          cdCat03 = \"001\", # 総人口 \n                          cdTime = \"1801\" # 2023年10月1日現在\n                          )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nFetching record 1-1824... (total: 1824 records)\n```\n\n\n:::\n:::\n\n\n\n## Draw line charts\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndat_2023g <- dat_2023 |> \n  select(sex = \"男女別\", age = \"年齢5歳階級\", area_code, prefecture = \"全国・都道府県\", value) |> \n  mutate(\n    area_code = str_sub(area_code, 1L, 2L) |> as.numeric(),\n    region = case_when(\n      between(area_code, 1, 7) ~ \"北海道・東北\",\n      between(area_code, 8, 14) ~ \"関東\",\n      between(area_code, 15, 20) ~ \"甲信越\",\n      between(area_code, 21, 24) ~ \"東海\",\n      between(area_code, 25, 30) ~ \"関西\",\n      between(area_code, 31, 35) ~ \"中国\",\n      between(area_code, 36, 39) ~ \"四国\",\n      between(area_code, 40, 47) ~ \"九州・沖縄\",\n      .default = \"全国\"\n    )\n  ) |> \n  pivot_wider(id_cols = c(age, area_code, prefecture, region),\n              names_from = sex, values_from = value) |> \n  rename(male = \"男\", female = \"女\") |> \n  mutate(ratio = male / female) |> \n  mutate(ratio_std = ratio / ratio[1], .by = age) |> \n  filter(region != \"全国\", age != \"総数\") |> \n  mutate(\n    age = fct_reorder(age, parse_number(age)),\n    region = fct_reorder(region, area_code)\n  )\n\ndat_2023g |> \n  ggplot(aes(age, ratio_std)) +\n  geom_hline(yintercept = 1, color = \"gray30\", lty = 3) +\n  geom_line(aes(color = prefecture, group = prefecture), show.legend = FALSE) +\n  geom_text_repel(aes(label = prefecture), data = dat_2023g |> filter(age == \"25～29歳\"), size = 2, max.overlaps = 20) +\n  facet_wrap(vars(region), ncol = 2) +\n  labs(x = NULL, y = \"男／女比率（全国＝1で標準化）\") +\n  theme(axis.text.x = element_text(angle = 90))\n```\n\n::: {.cell-output-display}\n![男／女比率（全国＝1で標準化）2023年10月1日現在](index_files/figure-html/line_charts-1.png){fig-align='center' width=70%}\n:::\n:::\n\n\n\n## Choropleth map\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nprefectures_map <-\n  read_sf(system.file(\"shapes/jpn.shp\", package = \"NipponMap\"))\n\n# inset Okinawa\nprefectures_map$geometry[[47]] <- prefectures_map$geometry[[47]] + c(7, 14)\n\nlines <- cbind(c(132, 135, 137, 137), c(38, 38, 40, 43)) |> \n    st_linestring()\n\nprefectures_map |> \n  mutate(jiscode = as.numeric(jiscode)) |> \n  left_join(dat_2023g |> filter(age == \"25～29歳\"),\n            by = join_by(jiscode == area_code)) |> \n  ggplot() +\n  geom_sf(aes(fill = ratio_std), color = \"white\") +\n  geom_sf(data = lines, color = \"gray80\") +\n  scale_fill_gradient2(low = \"#559999\", mid = \"grey90\", high = \"#BB650B\",\n                         midpoint = 1) +\n  labs(fill = \"男／女比率（全国＝1で標準化）\") +\n  coord_sf(xlim = c(130, 149), ylim = c(31, 45)) +\n  theme_void(base_size = 16) +\n  theme(legend.position = \"bottom\",\n        legend.title = element_text(size = 10),\n        legend.text = element_text(size = 8))\n```\n\n::: {.cell-output-display}\n![男／女比率（全国＝1で標準化）：25〜29歳](index_files/figure-html/choropleth_map-1.png){fig-align='center' width=70%}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}